snippet hook_ENTITY_TYPE_insert "hook_ENTITY_TYPE_insert"
/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function `!v expand('%:t:r:r')`_${1}_insert(EntityInterface $entity) {
  ${2}
}
endsnippet

snippet hook_ENTITY_TYPE_delete "hook_ENTITY_TYPE_delete"
/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function `!v expand('%:t:r:r')`_${1}_delete(EntityInterface $entity) {
  ${2}
}
endsnippet

snippet hook_ENTITY_TYPE_create "hook_ENTITY_TYPE_create"
/**
 * Implements hook_ENTITY_TYPE_create().
 */
function `!v expand('%:t:r:r')`_${1}_create(EntityInterface $entity) {
  ${2}
}
endsnippet

snippet hook_ENTITY_TYPE_update "hook_ENTITY_TYPE_update"
/**
 * Implements hook_ENTITY_TYPE_update().
 */
function `!v expand('%:t:r:r')`_${1}_update(EntityInterface $entity) {
  ${2}
}
endsnippet

snippet service_ems "Service Entity Manager Storage"
\Drupal::service('entity.manager')
  ->getStorage(${1});
endsnippet

snippet continer_ems "Container Entity Manager Storage"
$this->container('entity.manager')
  ->getStorage(${1});
endsnippet

snippet this_ems "Entity Manager Storage"
$this->entityManager
  ->getStorage(${1});
endsnippet

snippet this_emsq "Entity Manager Storage Query"
$this->entityManager
  ->getStorage(${1})
	->getQuery();
endsnippet

